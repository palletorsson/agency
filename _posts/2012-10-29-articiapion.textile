---
layout: post
title: "Revelopers"
---


<h1> Revelopers</h1>

<h3>Introduction</h3>
When I started the research project in 2013, it seemed important to further my knowledge about hackers and software developer and the digital creative industry. It was to understand the creative edges of networked society, all part of my research plan. I had experience of digital art production, of start-ups and website production. However, I had never directly experienced the work or organization of a company of networked creativity. Therefore, I enlisted as an intern for two months in a software company in February of 2012. Around this time, I simultaneously read and learned more about software development methods to learn how working models such a Scrum had influenced creative production. The programming knowledge skills in Python and Javascript I obtained, would later considerably help me in the process realizing the installations and websites of the project.

In the fieldwork at the software company, a difference between ideologically and ethically imagined openness and the everyday reality of the production of the business became apparent.
  
Unclear boundaries forming potential conflicts occurred between the personal identities and freedom and the structured status of the company. A conflict I consider to be typically for the ambivalent nature of networks in the knowledge society, occurring between persons and organizations. I observed borders between freedom and control, such as individual creativity and workgroup. My findings are about boundaries between creativity and organization, individual liberty, and group dynamics formed. How network openness and rules of commercial projects, ethical and political evaluation of openness and enclosure and dreams of a more democratic world and a successful company. A conflict that is forming between the imaginary and real. I also found a key in how the essential formation of skill sets is of the organizational body and for the kind of creative and open system. A question that is critical to the flow of creativity and knowledge society, I investigate.


<hr>

<h3>The Company</h3>
The software developer company, founded in 2010, is located in Stockholm, Sweden. They started out as a web development company and have gradually expanded their work to web services, business development, and custom screen solutions.

The company has a website with a minimum amount of information that somewhat contrasts their good network of developers, influx of jobs, steady backers and prestigious clients. They have a Facebook page and a similar Twitter account where they post now and then, but most of their work is not made public.


<strong>Revelopers</strong> 
The company consists of six autodidactic developers and hackers with a general problem-solving nature; four persons are partners in the business, and two persons are employees. They are all men. Going back to the 90s, they had been friends before they took part in forming the company. They all have a deep interest in their work, share a passion for technology and to an extent also have overlapping hacker ethics, skills, and interests. I have a common history with some of them in the work around The Piracy Bureau dating back to 2004.

<strong>Developer Tools</strong>
There are one front-end developer, three backend developers, and one designer. The front-end languages are Html5, Css3, and JavaScript, with the extension of jQuery, Mootools, and Sass. One person works with Flash. The designer’s  primary tool is Illustrator.

The company state that they favor open source technologies such as the Python framework Django but they also have some good experience in Java and PHP. They say on their website that they are not picky regarding what programming languages to use, but the office discussions reveal that they dislike PHP. The argument is that PHP is both a poorly written language with many security issues but more importantly, it is a slippery slope for web development. Here they voice a general concern over the state of development.

<strong>Hacker Ethics</strong>
The concern is mainly about the low quality of products that PHP produces and the low developer pride it leads to “- if you end up installing Wordpress blogs half the day”, as one said. It might be an easy solution but it does not produce skilled developers and also impoverishes the industry as pricing for such skills are lower. On top of that, it makes the web mediocre and tedious and in the end gives the bad business reputation. The developers at the company have a developers pride in what they do and know they can do better.

As they state on their homepage “We are a team of designers, engineers, and others who are concerned about making the virtual world look, feel and function better”. This statement is a greater vision and ethics concerning common interfaces and highlight a potentially wider ethical context of open networked systems. The ethical dilemma of user interfaces is an overarching question in many discussions at the company.

<strong>The master workshop</strong>
During the period, the company had two major projects and several smaller. I spent most of my time with a senior developer working on one of their major projects: an online retail store for the Asian market. He was showing me his work and transferring his knowledge to me by close interaction and collaboration. As in a master workshop, knowledge and craftsmanship in programming, concrete tools and programming theory were handed down directly to me, the apprentice.

<strong>The work process</strong>
The work process of the company can be very informal because of the small sized team. The work initiates with general analysis and discussions and then continued with an Illustrator design draft. From the draft, the front-end developers make the first mock-up of conception. Meanwhile, he works on backend system design starts. After this, depending on the size of the job, missing pieces and changes are gradually worked into the project by reflecting progress on the backend and frontend. The integration is done, it seem, in an ad-hoc fashion: I think it is possible because they form such a small team. The iterative design process, where they can fill in the gaps, is a critical component in how they can integrate their different skills in production. I would say that their high skills make it possible for them to work in an informal, bricolage manner. The process makes me consider them a typical innovation company, rather than a maintenance one.

<strong>The office</strong>
The office that they share with a design and architecture company is one of the main streets in downtown Stockholm. It is an open office landscape with a library, kitchen, and discreet conference rooms.

The team has their workspace at the back of the office around large tables that form a rectangular shape. Small personalized areas forms around big monitors where everybody can plug in their laptops. From that, a kind of semi-private circle can form with personal gadgets, headphones, cell phones, magazines and tech-related books. During the day, coffee cups cram the tables. At night and when people are in crunch time, take away is eaten in front of the monitors.

The small work teams of the company have an informal work methodology that uses direct communication. The work method further facilitated by the open office space where they can address each other directly on the development of projects and help each other on any issues that might occur, all with a minimum of effort.

<strong>Discussion process</strong>
Discussions are mainly about project iteration but also on design principles and developer culture as well as more general topics, from gaming and gadgets to biotechnology and science fiction or just the latest talk from Reddit. The discussions play a vital part in the general information dissemination, in project development and the production of the identity of the group. The discussions are creating consensus of projects and strengthen their identity, produce self-awareness and confidence. The discussions are an important process for them to be able to push the envelope and be at the forefront of what they do in their competitive environment.

During my time at the company, discussions on the projects were often lively between the designer and the developers. What was to be the next logical step in the current project was sometimes sold with a lot of efforts. For instance, the designer argued for more time before he was ready to move into the next phase of development. With disagreements, body language and sometimes a kind of strategic frustration and silence occurred many times. Watching the meetings through the glass windows into their the conference room I could almost touch the compressed moment of the creation of the company. I enjoyed the critical discussions and how they voiced opinions to pinpoint an argument for quality, how to best reach beyond cliche and what was the real value of a product. 

While the informal micromanage process seems to work well, the midday working hours could be a bit fragmented in terms of the hours of concentrated coding. Accordingly, a lot of work is done from home or in the evening at the office.

Work hours are full flex so they can work where it is best suited, from home or the office. The office is empty sometimes since no mandatory presences are required. As a logical and vital extension of the office space and full flex, the principle is that everyone should be reachable on IRC (Internet Relay Chat). Here issues can be discussed and solved, and questions posted for fast answers.

Lunch hours are used for meetings and discussions often at restaurants nearby. The topics here extend to ethical or philosophical discussions on the state of development, work principles and process, on ideological or ethical anecdotic reflections on digital, political and social systems. Here the full fledge hacker ethics concern of systems are in the open.

<h3>Commentary</h3>

I assume that the discussions are as a way of establishing the identity of the team in the competitive environment of the company as well as in a larger ethical and social context of openness. In the discussions, there is clearly a positioning against what they pinpoint as negative player protocols, services, design, and behavior. If I interpret this case in a wider context, these bad entities often seem to benefit from hierarchical, closed and centralized systems. These systems contrast with open technologies such as the internet that has the potential to break and remake these systems. 

Primarily originating from the informal discussions at the office and during lunch, a logical thread of thought crystallizes. Well summarized in the quote from the website: the systems surrounding us can be made better (“the virtual world look, feel and function better”.)

An adoption to more open and non-traditional forms of development and protocols is something that demands highly skilled agents. To further understand the position of the company we can look at two competing models of production: centralized and decentralized. The Internet with is p2p topologies has made the difference between these two systems evident as it forms a digital convergence where almost everything is gradually being digitized and potentially connected. Digital networks opened up for a big change in the way we produce, distribute and consume in society today. The changes present both opportunities and threats for businesses and force them to form strategies to adapt.

One of the first to develop a model for how open software development works were Eric Raymond in his book The Cathedral and the Bazaar (1997). “Internet-enabled collaboration and free information sharing, not monopolistic control, is the key to innovation and product quality”. He describes the hierarchical cathedral-like systems of the past in contrast to distributed bazaar-like system with more freedom. 

I think it is right to see the company in this light. The informal work process set in the open office landscape is a flexible and efficient model that draws from the collective experiences of the developers. When the developers state that they can do better, it is about creating better services for their clients. However, in a broader perspective, it is also about pursuing a more general investigation and exploration of these possibilities to benefit society as a whole. In aiming for the better, there is a time aspect. The Short-term goals relate to the business and more speculative objectives that relate to the potential of systems and what systems could be.

The discussions range from utopian dreams for a better future to concrete everyday solutions and trade-offs in the existing protocols, tools, and for the company. It is possible to have a different type of organization in systems of work, in politics and society. But when it comes to the everyday interaction and maintenance of systems, interfaces, games, tools and programming languages it is different. Sure these methods can be extended, subverted and hacked, but they must also be maintained and work.

I will now give some examples of how this plays out. In the discussions on openness and enclosure, central and decentralized, hierarchical and distributed system and between the actual and utopia. The first several examples are of the working conditions and the competitive environment and then there are a few examples of reflections on interfaces, protocols, tools, and games.

<strong>Choose</strong>
The contradiction between the ethics of the company and the fact that the company is a business can arise. Making Trade-offs between ethics and possible income, jobs and clients. At times, they refused to take clients they dislike. For instance, they declined to make a website for a company that was in conflict with a syndicalist union. Sometimes the stakes are too high for them to refuse projects. They might engage with a client even though they have a business model of enclosure, like when they engage with subcontractors of Hollywood.

I see a contradiction between the hacker and activist ethics that aims for openness and a better world and the everyday trade-off of running a business. One of them formulates the relation between activism and business and in a kind of rationalizing logic. - I want to take from the rich and do something good with the money, also adding, -activists always have too little money. To see a company as a way of activism is a trade-off between power and freedom.

The CEO said that the advertising agencies in collaboration with big media are making Internet ugly and nonfunctioning because they are trying to uphold old regimes of control. He thinks other forms of less hierarchical dialog might devlop over time with the help of the open principles of Internet. - Meanwhile, we do things we enjoy and are awesome, he said. 

He brings up the difference between working cultures in different countries. The hierarchical system like in Japan and low wages in England make the condition for web-development poor in comparison with Nordic countries and the United States.

Sometimes having better solutions, knowing better and being skilled can be used to dominate others, especially when customers overstep their boundaries. On one occasion, he used the fact that people from “Media” don't understand the core principle of the difference between domain name and hosting to an advantage. The client has not been paying the bills and is trying hard not to. "- Take down the site," he says. -”They do not understand how the internet architecture works and that makes them weak”.

<strong>A friend</strong> 
A friend of persons at the company that worked as a system administrator at another company came to the office several times. It was to complain and discuss the working condition of his work. He was troubled by the impossibility of the top-down model of information flow. Individuals making the work a crippled by managing superiors. He describes a conflict between the technician and managerial part of the company upholding different models and upholding hierarchical and horizontal decision flow. He said that the operational managers at are experts at being managers but have no clue how to solve real problems; still they are occupied with prestige. - As a technician, you are a problem solver, they are meeting coordinators. It quickly
becomes “us against them”. In the end, he got so tired of the unresolved problems and when an opportunity opened he just resigned from his job and started to work for this company.

<strong>Interfaces</strong>
The company works with software interfaces and that offer a unique kind of issues and possible. Usability and effectiveness are essential both when it come to the products they make, and tools they use. Concern over poor interfaces and services and discussions about interfaces as creative systems was on the table in various forms. In the design process, how to make their designs intuitive but not generic, how their working tools such as different programming languages and desktop programs for design facilitate the creative process. What constitutes a real programming language, comparing the experience from different game development platforms and what possibilities and potential they hold.

Trying to strike a balance between skills and knowledge thresholds. Interfaces that are capable and where one’s skills can leverage it in full. Contrast the simple and brilliant interface of IRC for communication with the frustrating interface of Facebook while seeing its success. Compare the simplest and yet powerful command line with a messy desktop application that does the same job. Skills in programming and command-line control can overcome design interfaces as a graphical layer and barrier to the most direct command and control of the computer and the world. Where is the common ground between skills, powerful and sophisticated systems and simple interfaces? I think it is essential to seek creative possibilities in today’s technology-dependent world. What possible interactions are there between the actual and its interfaces? What performativity does the interface hold? Is it closed or open, configurable or hackable? 

In the open source languages or tools of there is a context of feedback. I find this a fascinating
learning environment. It is the debug reports of the framework, documentation and support models. There is also an extended community of other developers on forums and online tutorials. This knowledge ecology of open source is a unique environment for learning and feedback. For me, this creative environment enables creativity to flow in a new way. #How we obtain knowledge and how we work creativity with networked tools.
 
<strong>The Imaginary code</strong>
The open network places the coding in a social context. Additionally Coding in itself also holds a speculative force, history, and future. Typed instruction opens up a path to the imaginary, new and unknown, like in the Turing test. Here coding leads to speculation on allegoric and fractal potential and the relation between information and life. Topics of machine intelligence and computer emotions, singularity, digital mind-body expansion, biohacking, synthesized drugs, hacker ethics, memory-leaks, time-control, and encoded life. Coding, protocols, and tools are an imaginary space of what is possible to think and do, a genuine art form with full-fledged potential.

<strong>Centralizing service vs. creatively learn skills</strong>
One criticism of Spotify as a centralizing service was particularly interesting in context learning and creativity. The problem with centralized services like Spotify is that they produce consumers. Spotify makes people forget or not learn how to pirate. Piracy is seen as a possibility to find new  opportunities. Spotify imposes a central, monopolists consumption logic and where the knowledge to share music in other ways is fading away. Therefore, the critique of Spotify is that it produces consumers instead of active community members, actively taking part in the investigative processes for new possibilities and new search skills. The basic knowledge of finding information beyond playlists and knowledge of how to get access to closed forums or how to configure proxy settings. An alternative must break the logic of centralized services and remain a tool for communication between connected people (peered clients). This process will require skilled people that can make a decentralized concept work.

The organization is one example of a contradiction in the consumer/central and client skills/decentralization logic. The question that remains is how it will be possible to attract a larger group of people to take part in these endeavors. The question is how can we lower the threshold with common protocols and remain decentralized.

The name of the company refers to hacking and gaming. Games play an essential part of the common interest in the group. I heard many stories and anecdotes from the world of games. Games are systems that you can learn from and hack. Some of them jointly played World of Warcraft and were part of the same guild. The CEO told a story about how he spent a year in WoW and how he became a guild leader. He testified that he learned organizational skills, for instance, when he was directing guild members to do mining and leatherwork to be able to do produce things needed to engage in raids successfully. Coded world's leading trails to imaginations. 

Researching the company I was struck by how lively, dense and open the dialog and reproduction of their identity was. It has been rewarding about the core topics of my research: how creative identities are forming in network society and to find clues to distributed knowledge models. The case has verified the everyday struggles, joys and conflicts these networked processes involve. That skills play such vital part in upholding, in particular, distributed system and self-organisation in the ability to bridging interfaces was one important key. I will continue to research in conjunction with the discussion of creativity and art (ars and techne) and social models (Gesellschaft and Gemeinschaft).

<strong>The future of the company</strong>
To see a company as a way of activism is a trade-off between power and liberty. If a company can be a model of activism, could there also be a way to ensure certain ethical norms relating to, for instance, open protocols and the commons?

What will happen when the company grows, how can they maintain their creativity, edge, and informal work method and not fall into the trap of hierarchical management?

A weakness in such a small and edgy team of developers as in the case of the company is that the specialization level is high, and redundancy is low. This specialization can leave the company vulnerable in the event of sickness or other unforeseen situations. (A particular case of this surfaced but will not be discussed here). How can one level between edge and redundancy of skills in a small team?

How can we level skill, simple interfaces, and low thresholds with complex techno-social systems?

The company is a male homosocial entity; can that lead to problems in terms of the experience they hold within the group?

The informal work process set in the open office landscape is a flexible and efficient model drawing from the experience of being a software developer. Drawing from software methods like lean and scrum, how can such practices inform the distributed networked knowledge model in my continued research?

Special thanks to Katarina Grönfors and Youkali for Proofreading and all the people at the company for making the project happen.
